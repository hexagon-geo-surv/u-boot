// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2020 NXP
 * Copyright (C) 2021 Leica Geosystems AG
 */

/dts-v1/;

#include <dt-bindings/usb/pd.h>
#include "imx8mm.dtsi"
#include "crocodile-pinmap.h"

/ {
	compatible = "fsl,imx8mm";

	chosen {
		stdout-path = &uart3;
	};

	reg_usdhc2_vmmc: regulator-usdhc2 {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_usdhc2_vmmc>;
		regulator-name = "VSD_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};


	memory@40000000 {
		device_type = "memory";
		reg = <0x0 0x40000000 0 0x40000000>;
	};

};

&A53_0 {
	cpu-supply = <&buck2_reg>;
};

&A53_1 {
	cpu-supply = <&buck2_reg>;
};

&A53_2 {
	cpu-supply = <&buck2_reg>;
};

&A53_3 {
	cpu-supply = <&buck2_reg>;
};

&ddrc {
	operating-points-v2 = <&ddrc_opp_table>;

	ddrc_opp_table: opp-table {
		compatible = "operating-points-v2";

		opp-25M {
			opp-hz = /bits/ 64 <25000000>;
		};

		opp-100M {
			opp-hz = /bits/ 64 <100000000>;
		};

		opp-750M {
			opp-hz = /bits/ 64 <750000000>;
		};
	};
};


&i2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic_nxp: pca9450@25 {
		compatible = "nxp,pca9450a";
		reg = <0x25>;
		pinctrl-0 = <&pinctrl_pmic>;
		pinctrl-names = "default";
		interrupt-parent = <&gpio1>;
		interrupts = <3 IRQ_TYPE_LEVEL_LOW>;

		regulators {
			buck1_reg: BUCK1 {
				regulator-name = "BUCK1";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
				nxp,dvs-run-voltage = <820000>;
				nxp,dvs-standby-voltage = <800000>;
			};

			buck2_reg: BUCK2 {
				regulator-name = "BUCK2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck3_reg: BUCK3 {
				regulator-name = "BUCK3";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck4_reg: BUCK4 {
				regulator-name = "BUCK4";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5_reg: BUCK5 {
				regulator-name = "BUCK5";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6_reg: BUCK6 {
				regulator-name = "BUCK6";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1_reg: LDO1 {
				regulator-name = "LDO1";
				regulator-min-microvolt = <1600000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2_reg: LDO2 {
				regulator-name = "LDO2";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1150000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3_reg: LDO3 {
				regulator-name = "LDO3";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4_reg: LDO4 {
				regulator-name = "LDO4";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5_reg: LDO5 {
				regulator-name = "LDO5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};
		};
	};

};

/* console */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	/delete-property/ dmas;
	/delete-property/ dma-names;
	status = "okay";
};

&usdhc2 { /* SD card */
	assigned-clocks = <&clk IMX8MM_CLK_USDHC2>;
	assigned-clock-rates = <200000000>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	status = "okay";
};

&usdhc3 { /* eMMC */
	assigned-clocks = <&clk IMX8MM_CLK_USDHC3_ROOT>;
	assigned-clock-rates = <400000000>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};


&iomuxc {
	pinctrl-names = "default";

	/*
	 * Reserved bit 30 in value for Pad Control Register is used to set
	 * SION (bit 4) in Pad Mux Register.
	 * Setting SION to "1" forces the input path to be active regardless
	 * of the value driven by the corresponding module and is required for
	 * I2C.
	 */

	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			CROCODILE_IMX8_I2C_1_SCL	0x400001c3
			CROCODILE_IMX8_I2C_1_SDA	0x400001c3
		>;
	};

	pinctrl_pmic: pmicirqgrp {
		fsl,pins = <
			CROCODILE_PMIC_NINT		0x141
		>;
	};

	pinctrl_reg_usdhc2_vmmc: regusdhc2vmmcgrp {
		fsl,pins = <
			CROCODILE_IMX8_SD2_RSTX		0x41
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2grpgpiogrp {
		fsl,pins = <
			CROCODILE_IMX8_SD2_NDET		0x41
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			CROCODILE_IMX8_SD2_CLK		0x190
			CROCODILE_IMX8_SD2_CMD		0x1d0
			CROCODILE_IMX8_SD2_DATA0	0x1d0
			CROCODILE_IMX8_SD2_DATA1	0x1d0
			CROCODILE_IMX8_SD2_DATA2	0x1d0
			CROCODILE_IMX8_SD2_DATA3	0x1d0
			CROCODILE_SD2_VSEL		0x1d0
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2-100mhzgrp {
		fsl,pins = <
			CROCODILE_IMX8_SD2_CLK		0x194
			CROCODILE_IMX8_SD2_CMD		0x1d4
			CROCODILE_IMX8_SD2_DATA0	0x1d4
			CROCODILE_IMX8_SD2_DATA1	0x1d4
			CROCODILE_IMX8_SD2_DATA2	0x1d4
			CROCODILE_IMX8_SD2_DATA3	0x1d4
			CROCODILE_SD2_VSEL		0x1d0
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2-200mhzgrp {
		fsl,pins = <
			CROCODILE_IMX8_SD2_CLK		0x196
			CROCODILE_IMX8_SD2_CMD		0x1d6
			CROCODILE_IMX8_SD2_DATA0	0x1d6
			CROCODILE_IMX8_SD2_DATA1	0x1d6
			CROCODILE_IMX8_SD2_DATA2	0x1d6
			CROCODILE_IMX8_SD2_DATA3	0x1d6
			CROCODILE_SD2_VSEL		0x1d0
		>;
	};

	pinctrl_usdhc3: usdhc3grp {
		fsl,pins = <
			CROCODILE_SD3_CLK		0x190
			CROCODILE_SD3_CMD		0x1d0
			CROCODILE_SD3_DATA0		0x1d0
			CROCODILE_SD3_DATA1		0x1d0
			CROCODILE_SD3_DATA2		0x1d0
			CROCODILE_SD3_DATA3		0x1d0
			CROCODILE_SD3_DATA4		0x1d0
			CROCODILE_SD3_DATA5		0x1d0
			CROCODILE_SD3_DATA6		0x1d0
			CROCODILE_SD3_DATA7		0x1d0
			CROCODILE_SD3_STROBE		0x190
		>;
	};

	pinctrl_usdhc3_100mhz: usdhc3-100mhzgrp {
		fsl,pins = <
			CROCODILE_SD3_CLK		0x194
			CROCODILE_SD3_CMD		0x1d4
			CROCODILE_SD3_DATA0		0x1d4
			CROCODILE_SD3_DATA1		0x1d4
			CROCODILE_SD3_DATA2		0x1d4
			CROCODILE_SD3_DATA3		0x1d4
			CROCODILE_SD3_DATA4		0x1d4
			CROCODILE_SD3_DATA5		0x1d4
			CROCODILE_SD3_DATA6		0x1d4
			CROCODILE_SD3_DATA7		0x1d4
			CROCODILE_SD3_STROBE		0x194
		>;
	};

	pinctrl_usdhc3_200mhz: usdhc3-200mhzgrp {
		fsl,pins = <
			CROCODILE_SD3_CLK		0x196
			CROCODILE_SD3_CMD		0x1d6
			CROCODILE_SD3_DATA0		0x1d6
			CROCODILE_SD3_DATA1		0x1d6
			CROCODILE_SD3_DATA2		0x1d6
			CROCODILE_SD3_DATA3		0x1d6
			CROCODILE_SD3_DATA4		0x1d6
			CROCODILE_SD3_DATA5		0x1d6
			CROCODILE_SD3_DATA6		0x1d6
			CROCODILE_SD3_DATA7		0x1d6
			CROCODILE_SD3_STROBE		0x196
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			CROCODILE_IMX8_UART3_RXD	0x000
			CROCODILE_IMX8_UART3_TXD	0x140
		>;
	};

	pinctrl_wdog: wdoggrp {
		fsl,pins = <
			CROCODILE_WDOG_B                0x166
		>;
	};

};
